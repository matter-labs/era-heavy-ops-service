name: "Rust CI"
on:
  pull_request:

jobs:
  build:
    name: cargo build and test
    runs-on: [ubuntu-latest]
    container:
      image: nvidia/cuda:12.2.0-devel-ubuntu22.04
    env:
      BELLMAN_CUDA_DIR: ${{ github.workspace }}/bellman-cuda
    steps:
      - uses: actions/checkout@v3

      - name: Install build dependencies
        run: apt update && apt install -y pkg-config libssl-dev libclang-dev gcc g++ curl gh

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2022-08-23
          # Remove default `-D warnings`.
          rustflags: ""

      - name: Find latest bellman-cuda release
        id: bellman-cuda-release
        run: |
          echo "tag=$(gh release -R github.com/matter-labs/era-bellman-cuda list -L 1 | awk '{print $3}')" >> $GITHUB_OUTPUT

      - name: Prepare bellman-cuda directory
        run: |
          declare release=($(curl --silent https://api.github.com/repos/matter-labs/era-bellman-cuda/releases | jq -r '.[0] | .name, .tarball_url, .assets[0].browser_download_url'))
          #curl --silent -L "${release[1]}" --output bellman-cuda-source.tar.gz
          curl --silent -L "${release[2]}" --output bellman-cuda.tar.gz
          mkdir -p bellman-cuda
          tar xvf bellman-cuda.tar.gz -C ./bellman-cuda
          #tar xvf bellman-cuda-source.tar.gz
          #mv bellman-cuda-${{ steps.bellman-cuda-release.outputs.tag }}/src ./bellman-cuda/

      - run: cargo build --verbose

      - run: cargo test --package api-testing --release --no-run

  formatting:
    name: cargo fmt
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1
