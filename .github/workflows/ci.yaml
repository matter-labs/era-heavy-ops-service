name: "Rust CI"
on:
  pull_request:

jobs:
  build:
    name: cargo build and test
    runs-on: [ubuntu-latest]
    env:
      BELLMAN_CUDA_DIR: ${{ github.workspace }}/bellman-cuda
    steps:
      - uses: actions/checkout@v3

      - name: Install build dependencies
        run: sudo apt update && sudo apt install -y jq

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2022-08-23
          # Remove default `-D warnings`.
          rustflags: ""

      - name: Find latest bellman-cuda release
        id: bellman-cuda-release
        run: |
          echo "tag=$(gh release -R github.com/matter-labs/era-bellman-cuda list -L 1 | awk '{print $3}')" >> $GITHUB_OUTPUT

      - name: Prepare bellman-cuda directory
        shell: bash
        # Curl ugliness is required because gh can't work with authentication: https://github.com/cli/cli/issues/2680.
        run: |
          release=($(curl --silent https://api.github.com/repos/matter-labs/era-bellman-cuda/releases | jq -r '.[0] | .name, .tarball_url, .assets[0].browser_download_url'))
          curl --silent -L "${release[1]}" --output bellman-cuda-source.tar.gz
          curl --silent -L "${release[2]}" --output bellman-cuda.tar.gz
          mkdir -p bellman-cuda
          tar xvfz bellman-cuda.tar.gz -C ./bellman-cuda
          tar xvfz bellman-cuda-source.tar.gz -C ./bellman-cuda --strip-components=1 --wildcards \*/src/

      - run: cargo build --verbose

      - run: cargo test --package api-testing --release --no-run

  formatting:
    name: cargo fmt
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1
